name: Build Single Tag Versions
on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Echo repository info
        run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Check if index.md was changed
        id: check_changes
        run: |
          # Calculate current MD5 hash of index.md
          current_hash=$(md5sum "docs/resources/ethics-reading-list/index.md" | cut -d' ' -f1)
          echo "Current hash: $current_hash"
          
          # Check if hash file exists and compare
          if [ -f "docs/resources/ethics-reading-list/.index.md.hash" ]; then
            stored_hash=$(cat "docs/resources/ethics-reading-list/.index.md.hash")
            echo "Stored hash: $stored_hash"
            
            if [ "$current_hash" = "$stored_hash" ]; then
              echo "The index.md file has not changed."
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "The index.md file has changed."
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No previous hash found - assuming file changed."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
          
          # Store current hash for next run
          echo "$current_hash" > "docs/resources/ethics-reading-list/.index.md.hash"

      - name: Create topic files in repository
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          # multi-word tags
          cd docs/resources/ethics-reading-list/
          for n in "general%20resources general-resources" "crowdsourcing%20issues crowdsourcing-issues" "dual%20use dual-use" "model%20issues model-issues" "language%20diversity language-diversity" "environmental%20impact environmental-impact"; do a=( $n ); grep t-${a[0]} index.md | sed 's/$/\n/' > x-${a[1]}.md; cat single-file-header.txt x-${a[1]}.md > t-${a[1]}.md; done
          rm -f x-*
          # single word tag
          for n in biases data evaluation uncategorized; do grep t-$n index.md | sed 's/$/\n/' > x-$n.md; cat single-file-header.txt x-$n.md > t-$n.md; done
          rm -f x-*

      - name: Create type files in repository
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          cd docs/resources/ethics-reading-list/
          for n in published preprint post report; do grep type-$n index.md | sed 's/$/\n/' > x-$n.md; cat single-file-header.txt x-$n.md > type-$n.md; done
          rm -f x-*
 
      - name: Setup git config
        run: |
          git config user.name "ACL Ethics Bibliography Actions Bot"
          git config user.email "actions@github.com"

      - name: Commit and push changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git add .
          git commit -am "Auto-generate topic files for ethics reading list"
          git push origin
      
      - name: Commit hash file for change tracking
        run: |
          git add docs/resources/ethics-reading-list/.index.md.hash
          git commit -m "Update index.md hash for change tracking" || echo "No changes to commit"
          git push origin || echo "Nothing to push"

      - run: echo "üçè This job's status is ${{ job.status }}."